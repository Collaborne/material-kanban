language: node_js
node_js:
- lts/erbium
cache:
  directories:
  - node_modules
script:
- npm test
- npm run predeploy
after_success:
- npm run build
before_deploy:
- |-
  # `before_deploy` runs before each deploy provider, so if there is already a build_package_version defined don't bother working
  # through this again.
  if [ -n "${build_package_version}" ]; then
    exit 0
  fi
  # If we're not a tag build: Use `npm version` to prepare the version for deploying under a dist tag
  if [ -n "${TRAVIS_TAG}" ]; then
    exit 0
  fi
  # Build a version that properly compares as prerelease on top of the existing version. If the existing version is
  # a pre-release already separate further components with '.', otherwise use '-'.
  # The safe branch name is used as dist tag and as part of the version as prerelease identifier, so must follow
  # the strict semver grammar rules.
  safe_branch_name=$(echo "${TRAVIS_BRANCH}" | tr -d '\n' | tr -cd 'A-Za-z0-9-')
  ts=$(date +%Y%m%d%H%M%S)
  package_version=$(node -p 'require("./package.json").version')
  if echo "${package_version}" | grep -- '-' >/dev/null 2>&1; then
    prerelease_separator=.
  else
    prerelease_separator=-
  fi

  build_package_version=${package_version}${prerelease_separator}${safe_branch_name}.${ts}
  npm --no-git-tag-version version ${build_package_version}
deploy:
- provider: npm
  email: npm@collaborne.com
  api_key:
    secure: "ktNV3mbQgqEy/euKgjOl5oPNCjM6bK+Zn4W3VZ5132WC9u/G+8l3SOEamag4rHs1QlEGBVPcAGMQ9+m66LI/bhhq2hq4Yci2cjjdB0TbJClr4gTxIu/3P48Ic/LhdnASniWIorM8ENam2iZJ9vVSuK6TxIbeBrLX3evJBZbl9irki1ClgyMVN3MqLjzAwAdycu5tyP/twZOp7BztBmaYFbr3AF/Z/AegjBj6rHFibX8EESPcwmtHv90HFfV07byRbHPNQIjJNDsZSLOnw37WG7xKtVLEDIsCV3nQZuerkKluf9wIjupy0JjHSVfd09WGGjkUI+D/k+vVxnMpkWiUqpnTv5Gq3hJpu5AdC9GYuINAMC7gZfZgb6/1sNFVslr7wWsAb3NLCsKslMI1HG5lvwZ4E2koL1BlJ+ylwLqXUm4VrkS8A8uXtay8Fj2+weABTXM5pUsx0qMKB4vHkEOcShNQlQb/DVRP8jbg3gtDu+M1Ke7pA9syMA54luviPK/fA+g/mTQkwQyARW/3+jVn0j+0ReZLSEd1qNa7NZ1CfUmiS07CfPDJPZdKGVV7PNXSVXdk1zN9bezdalu0FK/MBB9twhnMBty/BXlbXMEIfhwzxJyRwtF3JbO4BrEB2nySiWSOeBwTY3k798YTMjjXnL+iSwvxN03WvnYC/ZLNp0o="
  on:
    tags: true
    condition: $(node -e 'console.log("v" + require("./package.json").version)') = ${TRAVIS_TAG}
  skip_cleanup: true
- provider: npm
  email: npm@collaborne.com
  api_key:
    secure: "ktNV3mbQgqEy/euKgjOl5oPNCjM6bK+Zn4W3VZ5132WC9u/G+8l3SOEamag4rHs1QlEGBVPcAGMQ9+m66LI/bhhq2hq4Yci2cjjdB0TbJClr4gTxIu/3P48Ic/LhdnASniWIorM8ENam2iZJ9vVSuK6TxIbeBrLX3evJBZbl9irki1ClgyMVN3MqLjzAwAdycu5tyP/twZOp7BztBmaYFbr3AF/Z/AegjBj6rHFibX8EESPcwmtHv90HFfV07byRbHPNQIjJNDsZSLOnw37WG7xKtVLEDIsCV3nQZuerkKluf9wIjupy0JjHSVfd09WGGjkUI+D/k+vVxnMpkWiUqpnTv5Gq3hJpu5AdC9GYuINAMC7gZfZgb6/1sNFVslr7wWsAb3NLCsKslMI1HG5lvwZ4E2koL1BlJ+ylwLqXUm4VrkS8A8uXtay8Fj2+weABTXM5pUsx0qMKB4vHkEOcShNQlQb/DVRP8jbg3gtDu+M1Ke7pA9syMA54luviPK/fA+g/mTQkwQyARW/3+jVn0j+0ReZLSEd1qNa7NZ1CfUmiS07CfPDJPZdKGVV7PNXSVXdk1zN9bezdalu0FK/MBB9twhnMBty/BXlbXMEIfhwzxJyRwtF3JbO4BrEB2nySiWSOeBwTY3k798YTMjjXnL+iSwvxN03WvnYC/ZLNp0o="
  on:
    all_branches: true
    condition: ${TRAVIS_TAG} == ""
  skip_cleanup: true
  tag: ${safe_branch_name}
- provider: pages
  skip_cleanup: true
  local_dir: storybook-static
  github_token: $GITHUB_TOKEN
  keep_history: true
  on:
    branch: master
