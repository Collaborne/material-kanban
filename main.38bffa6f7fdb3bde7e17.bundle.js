(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1371:function(module,exports,__webpack_require__){"use strict";var _clientApi=__webpack_require__(72),_clientLogger=__webpack_require__(45),_configFilename=__webpack_require__(1372);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1372:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var parameters={backgrounds:{default:"light",values:[{name:"light",value:"#fafafa"},{name:"dark",value:"#303030"}]}}},1373:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(454).configure)([__webpack_require__(1374)],module,!1)}).call(this,__webpack_require__(133)(module))},1374:function(module,exports,__webpack_require__){var map={"./0-Kanban.stories.tsx":1380};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1374},1380:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Empty",(function(){return Empty})),__webpack_require__.d(__webpack_exports__,"ViewOnly",(function(){return ViewOnly})),__webpack_require__.d(__webpack_exports__,"ReadOnly",(function(){return ReadOnly})),__webpack_require__.d(__webpack_exports__,"I18n",(function(){return I18n})),__webpack_require__.d(__webpack_exports__,"GenericData",(function(){return GenericData})),__webpack_require__.d(__webpack_exports__,"ExternalChange",(function(){return ExternalChange})),__webpack_require__.d(__webpack_exports__,"Styling",(function(){return Styling})),__webpack_require__.d(__webpack_exports__,"ColumnActions",(function(){return ColumnActions})),__webpack_require__.d(__webpack_exports__,"CustomCard",(function(){return CustomCard}));var objectSpread2=__webpack_require__(8),jsx_runtime=__webpack_require__(3),react=__webpack_require__(0),react_default=__webpack_require__.n(react),src=__webpack_require__(47);function withDescription(storyDescription,story){var _story$parameters,_story$parameters2,_story$parameters2$do;return story.parameters=Object(objectSpread2.a)(Object(objectSpread2.a)({},story.parameters),{},{docs:Object(objectSpread2.a)(Object(objectSpread2.a)({},null===(_story$parameters=story.parameters)||void 0===_story$parameters?void 0:_story$parameters.docs),{},{description:Object(objectSpread2.a)(Object(objectSpread2.a)({},null===(_story$parameters2=story.parameters)||void 0===_story$parameters2||null===(_story$parameters2$do=_story$parameters2.docs)||void 0===_story$parameters2$do?void 0:_story$parameters2$do.description),{},{story:storyDescription})})}),story}var slicedToArray=__webpack_require__(40),dist=__webpack_require__(143),regenerator=__webpack_require__(69),regenerator_default=__webpack_require__.n(regenerator),asyncToGenerator=__webpack_require__(112),COLUMNS=[{id:"column1",name:"Column 1",cards:[{id:"card_column1_1"},{id:"card_column1_2"}]},{id:"column2",name:"Column 2 with a very long name",cards:[{id:"card_column2_1"}]},{id:"column3",name:"Empty column",cards:[]}];function useColumns(initialColumns){var _useState=Object(react.useState)(initialColumns),_useState2=Object(slicedToArray.a)(_useState,2),columns=_useState2[0],setColumns=_useState2[1];function _createColumn(){return(_createColumn=Object(asyncToGenerator.a)(regenerator_default.a.mark((function _callee(){var index;return regenerator_default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return index=columns.length+1,_context.abrupt("return",{id:"column".concat(index),cards:[]});case 2:case"end":return _context.stop()}}),_callee)})))).apply(this,arguments)}function _createCard(){return(_createCard=Object(asyncToGenerator.a)(regenerator_default.a.mark((function _callee2(column){return regenerator_default.a.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return _context2.abrupt("return",{id:"card_".concat(column.id,"_").concat(column.cards.length+1)});case 1:case"end":return _context2.stop()}}),_callee2)})))).apply(this,arguments)}return[columns,setColumns,function createColumn(){return _createColumn.apply(this,arguments)},function createCard(_x){return _createCard.apply(this,arguments)}]}function BasicStory(){var _useColumns=useColumns(COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,4),columns=_useColumns2[0],setColumns=_useColumns2[1],createColumn=_useColumns2[2],createCard=_useColumns2[3],columnMoved=Object(dist.action)("column moved");var cardMoved=Object(dist.action)("card moved");return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns,createColumn:createColumn,createCard:createCard,onCardMoved:function handleCardMove(card,newColumn,newIndex,oldColumn,oldIndex){cardMoved("".concat(card.id," from ").concat(oldColumn.id," position ").concat(oldIndex," to ").concat(newColumn.id," position ").concat(newIndex),{card:card,oldColumn:oldColumn,newColumn:newColumn})},onColumnMoved:function handleColumnMove(column,newIndex,oldIndex){columnMoved("".concat(column.id," from ").concat(oldIndex," to ").concat(newIndex),{column:column})}})}var IconButton=__webpack_require__(1409),CallToAction=__webpack_require__(578),CallToAction_default=__webpack_require__.n(CallToAction);function ColumnActionsStory(){var _useColumns=useColumns(COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,4),columns=_useColumns2[0],setColumns=_useColumns2[1],createColumn=_useColumns2[2],createCard=_useColumns2[3],columnActionClicked=Object(dist.action)("column action");return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns,createColumn:createColumn,createCard:createCard,renderColumnActions:function columnMenu(column){return Object(jsx_runtime.jsx)(IconButton.a,{onClick:function onClick(){return columnActionClicked("column ".concat(column.id),{column:column})},children:react_default.a.createElement(CallToAction_default.a)})}})}function AsciiArtCard(_ref){var card=_ref.card,provided=_ref.provided;return Object(jsx_runtime.jsxs)("button",Object(objectSpread2.a)(Object(objectSpread2.a)(Object(objectSpread2.a)({},provided.dragHandleProps),provided.draggableProps),{},{ref:provided.innerRef,onClick:function onClick(){return window.alert("Clicked")},children:["+--------------------------------+",Object(jsx_runtime.jsx)("br",{}),"| ",card.id," |",Object(jsx_runtime.jsx)("br",{}),"+--------------------------------+"]}))}function CustomCardStory(){var _useColumns=useColumns(COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,4),columns=_useColumns2[0],setColumns=_useColumns2[1],createColumn=_useColumns2[2],createCard=_useColumns2[3];return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns,createColumn:createColumn,createCard:createCard,children:function children(card,provided){return Object(jsx_runtime.jsx)(AsciiArtCard,{card:card,provided:provided})}})}function EmptyStory(){var _useColumns=useColumns([]),_useColumns2=Object(slicedToArray.a)(_useColumns,4),columns=_useColumns2[0],setColumns=_useColumns2[1],createColumn=_useColumns2[2],createCard=_useColumns2[3];return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns,createColumn:createColumn,createCard:createCard})}var toConsumableArray=__webpack_require__(86),Button=__webpack_require__(1405);function ExternalChangeStory(){var _useColumns=useColumns(COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,2),columns=_useColumns2[0],setColumns=_useColumns2[1],_useState=Object(react.useState)(Date.now()),_useState2=Object(slicedToArray.a)(_useState,2),lastChange=_useState2[0],setLastChange=_useState2[1];return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns},lastChange),Object(jsx_runtime.jsx)(Button.a,{onClick:function addColumn(){setColumns([].concat(Object(toConsumableArray.a)(columns),[{id:"column".concat(columns.length+1),cards:[]}])),setLastChange(Date.now())},children:"Add column (external)"})]})}var Card=__webpack_require__(1406),CardContent=__webpack_require__(1407);function GenericDataStory(){var myInitialColumns=COLUMNS.map((function(column,index){return Object(objectSpread2.a)(Object(objectSpread2.a)({},column),{},{index:index+1,cards:column.cards.map((function(card,index){return Object(objectSpread2.a)(Object(objectSpread2.a)({},card),{},{index:index+1})}))})})),_useState=Object(react.useState)(myInitialColumns),_useState2=Object(slicedToArray.a)(_useState,2),myColumns=_useState2[0],setMyColumns=_useState2[1];function _createMyColumn(){return(_createMyColumn=Object(asyncToGenerator.a)(regenerator_default.a.mark((function _callee(){var index;return regenerator_default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return index=myColumns.length+1,_context.abrupt("return",{id:"column".concat(index),cards:[],index:index});case 2:case"end":return _context.stop()}}),_callee)})))).apply(this,arguments)}function _createMyCard(){return(_createMyCard=Object(asyncToGenerator.a)(regenerator_default.a.mark((function _callee2(column){var index;return regenerator_default.a.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return index=column.cards.length+1,_context2.abrupt("return",{id:"card_".concat(column.id,"_").concat(index),index:index});case 2:case"end":return _context2.stop()}}),_callee2)})))).apply(this,arguments)}return Object(jsx_runtime.jsx)(src.Board,{columns:myColumns,onChange:setMyColumns,createColumn:function createMyColumn(){return _createMyColumn.apply(this,arguments)},createCard:function createMyCard(_x){return _createMyCard.apply(this,arguments)},children:function children(card,provided){return Object(jsx_runtime.jsx)(Card.a,Object(objectSpread2.a)(Object(objectSpread2.a)(Object(objectSpread2.a)({},provided.dragHandleProps),provided.draggableProps),{},{ref:provided.innerRef,children:Object(jsx_runtime.jsxs)(CardContent.a,{children:[card.id,": ",card.index]})}))}})}function I18nStory(){var _useColumns=useColumns(COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,4),columns=_useColumns2[0],setColumns=_useColumns2[1],createColumn=_useColumns2[2],createCard=_useColumns2[3];return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns,createColumn:createColumn,createCard:createCard,intl:{addCardButtonLabel:"Neue Karte",addColumnButtonLabel:"Neue Spalte",columnNamePlaceholder:"Namenlos"}})}function ReadOnlyStory(){var _useColumns=useColumns(COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,2),columns=_useColumns2[0],setColumns=_useColumns2[1];return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns})}var makeStyles=__webpack_require__(1403),styling_COLUMNS=[{id:"column1",name:"Green",color:"green",cards:[{id:"card_column1_1"}]},{id:"column2",name:"Blue",color:"blue",cards:[]},{id:"column3",name:"No color",cards:[]}],useStyles=Object(makeStyles.a)((function(theme){return{green:{background:"lightgreen"},blue:{background:"lightblue"},addCardButton:{color:theme.palette.text.secondary,textTransform:"none"},addColumnButton:{color:theme.palette.text.disabled,textTransform:"none",padding:"1px 16px"},column:{width:theme.spacing(33)},columnHeaderName:{color:"red"},columnHeaderRoot:{background:"lightblue"}}}));function StylingStory(){var _useColumns=useColumns(styling_COLUMNS),_useColumns2=Object(slicedToArray.a)(_useColumns,4),columns=_useColumns2[0],setColumns=_useColumns2[1],createColumn=_useColumns2[2],createCard=_useColumns2[3],classes=useStyles();return Object(jsx_runtime.jsx)(src.Board,{columns:columns,onChange:setColumns,createColumn:createColumn,createCard:createCard,getColumnClassName:function getColumnClassName(column){switch(column.color){case"green":return classes.green;case"blue":return classes.blue;default:return}},styles:{addCardButton:classes.addCardButton,addColumnButton:classes.addColumnButton,column:classes.column,columnHeaderName:classes.columnHeaderName,columnHeaderRoot:classes.columnHeaderRoot}})}function ViewOnlyStory(){var _useColumns=useColumns(COLUMNS),columns=Object(slicedToArray.a)(_useColumns,1)[0];return Object(jsx_runtime.jsx)(src.Board,{columns:columns})}__webpack_exports__.default={title:"Kanban",component:src.Board,decorators:[]};var Basic=withDescription("The Kanban board provides columns and cards that can be dragged around",(function(){return Object(jsx_runtime.jsx)(BasicStory,{})})),Empty=withDescription("A board can be empty initially",(function(){return Object(jsx_runtime.jsx)(EmptyStory,{})})),ViewOnly=withDescription("By not providing any callbacks the board will only show the content",(function(){return Object(jsx_runtime.jsx)(ViewOnlyStory,{})})),ReadOnly=withDescription("By not providing the `createColumn` and/or `createCard` parameters the board no longer allows creating columns and cards, respectively.",(function(){return Object(jsx_runtime.jsx)(ReadOnlyStory,{})})),I18n=withDescription("The `intl` parameter can be used to configure the texts in the board controls",(function(){return Object(jsx_runtime.jsx)(I18nStory,{})}));I18n.storyName="I18n";var GenericData=withDescription('The board handles generic data types and provides the correctly typed "card" in the render prop',(function(){return Object(jsx_runtime.jsx)(GenericDataStory,{})})),ExternalChange=withDescription("Changing the data from the outside requires re-creating the component",(function(){return Object(jsx_runtime.jsx)(ExternalChangeStory,{})})),Styling=withDescription("The columns of the board can be styled",(function(){return Object(jsx_runtime.jsx)(StylingStory,{})})),ColumnActions=withDescription("The column header can be customized",(function(){return Object(jsx_runtime.jsx)(ColumnActionsStory,{})})),CustomCard=withDescription("Card renderer can be changed",(function(){return Object(jsx_runtime.jsx)(CustomCardStory,{})}));Basic.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'The Kanban board provides columns and cards that can be dragged around',\n\t() => <BasicStory />,\n)"}},Basic.parameters),Empty.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription('A board can be empty initially', () => (\n\t<EmptyStory />\n))"}},Empty.parameters),ViewOnly.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'By not providing any callbacks the board will only show the content',\n\t() => <ViewOnlyStory />,\n)"}},ViewOnly.parameters),ReadOnly.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'By not providing the `createColumn` and/or `createCard` parameters the board no longer allows creating columns and cards, respectively.',\n\t() => <ReadOnlyStory />,\n)"}},ReadOnly.parameters),I18n.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'The `intl` parameter can be used to configure the texts in the board controls',\n\t() => <I18nStory />,\n)"}},I18n.parameters),GenericData.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'The board handles generic data types and provides the correctly typed \"card\" in the render prop',\n\t() => <GenericDataStory />,\n)"}},GenericData.parameters),ExternalChange.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'Changing the data from the outside requires re-creating the component',\n\t() => <ExternalChangeStory />,\n)"}},ExternalChange.parameters),Styling.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'The columns of the board can be styled',\n\t() => <StylingStory />,\n)"}},Styling.parameters),ColumnActions.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'The column header can be customized',\n\t() => <ColumnActionsStory />,\n)"}},ColumnActions.parameters),CustomCard.parameters=Object(objectSpread2.a)({storySource:{source:"withDescription(\n\t'Card renderer can be changed',\n\t() => <CustomCardStory />,\n)"}},CustomCard.parameters)},47:function(module,__webpack_exports__,__webpack_require__){"use strict";var _data__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(563);__webpack_require__.o(_data__WEBPACK_IMPORTED_MODULE_0__,"Board")&&__webpack_require__.d(__webpack_exports__,"Board",(function(){return _data__WEBPACK_IMPORTED_MODULE_0__.Board}));var _Board__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(565);__webpack_require__.d(__webpack_exports__,"Board",(function(){return _Board__WEBPACK_IMPORTED_MODULE_1__.a}));try{Board.displayName="Board",Board.__docgenInfo={description:"A basic kanban-style board\n\nThis component renders the provided columns and their cards, and allows the user to manipulate the board.\n\nFrom a developer perspective most props are optional, and if they are not provided may disable the related\nfunctionality: If there is no `createCard` available, then the board will not allow to create cards, for example.\n\nThe component provides essentially two levels of granularity for learning about the changes:\n* The `onChange` callback reports changes for the rendered columns, which is easy to use but may require diff-ing against\n   the original `columns` property to understand the change\n* The `on{Column,Card}{Added,Moved}` callbacks provide information on the level of individual columns and cards\n\nNote that the board doesn't provide means to delete columns or cards; these functionalities can be provided through\nthe `renderColumnActions` callback for columns or the `children` for rendering cards, respectively.",displayName:"Board",props:{columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"TColumn[]"}},intl:{defaultValue:null,description:"",name:"intl",required:!1,type:{name:"Intl"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"Styles"}},createColumn:{defaultValue:null,description:"",name:"createColumn",required:!1,type:{name:"(() => Promise<TColumn>) | undefined"}},createCard:{defaultValue:null,description:"",name:"createCard",required:!1,type:{name:"((column: TColumn) => Promise<TCard>) | undefined"}},onChange:{defaultValue:null,description:"Update the current columns with the given new columns\n\nThis callback will be invoked when the column order and/or content needs to be changed, and will always\nbe invoked before the more the specific callback. For instance, when both `onChange` and `onColumnMoved` are\nprovided the `onChange` callback will be invoked before the `onColumnMoved` callback.",name:"onChange",required:!1,type:{name:"((newColumns: TColumn[]) => void)"}},onColumnAdded:{defaultValue:null,description:"A column was added",name:"onColumnAdded",required:!1,type:{name:"((column: TColumn, index: number) => void)"}},onColumnMoved:{defaultValue:null,description:"A column was moved",name:"onColumnMoved",required:!1,type:{name:"((column: TColumn, newIndex: number, oldIndex: number) => void)"}},onCardAdded:{defaultValue:null,description:"A card was added",name:"onCardAdded",required:!1,type:{name:"((card: TCard, column: TColumn, index: number) => void)"}},onCardMoved:{defaultValue:null,description:"A column was moved",name:"onCardMoved",required:!1,type:{name:"((card: TCard, newColumn: TColumn, newIndex: number, oldColumn: TColumn, oldIndex: number) => void)"}},classes:{defaultValue:null,description:"",name:"classes",required:!1,type:{name:"Record<never, string>"}},getColumnClassName:{defaultValue:null,description:"Allows clients to style columns\n@param colum To be styled column\n@returns Name of the CSS class that should be attached to the column. Return\n`undefined` to keep standard styling",name:"getColumnClassName",required:!1,type:{name:"((colum: TColumn) => string) | undefined"}},renderColumnActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderColumnActions",required:!1,type:{name:"((colum: TColumn) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#Board"]={docgenInfo:Board.__docgenInfo,name:"Board",path:"src/index.tsx#Board"})}catch(__react_docgen_typescript_loader_error){}try{Board.displayName="Board",Board.__docgenInfo={description:"A basic kanban-style board\n\nThis component renders the provided columns and their cards, and allows the user to manipulate the board.\n\nFrom a developer perspective most props are optional, and if they are not provided may disable the related\nfunctionality: If there is no `createCard` available, then the board will not allow to create cards, for example.\n\nThe component provides essentially two levels of granularity for learning about the changes:\n* The `onChange` callback reports changes for the rendered columns, which is easy to use but may require diff-ing against\n   the original `columns` property to understand the change\n* The `on{Column,Card}{Added,Moved}` callbacks provide information on the level of individual columns and cards\n\nNote that the board doesn't provide means to delete columns or cards; these functionalities can be provided through\nthe `renderColumnActions` callback for columns or the `children` for rendering cards, respectively.",displayName:"Board",props:{columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"TColumn[]"}},intl:{defaultValue:null,description:"",name:"intl",required:!1,type:{name:"Intl"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"Styles"}},createColumn:{defaultValue:null,description:"",name:"createColumn",required:!1,type:{name:"(() => Promise<TColumn>) | undefined"}},createCard:{defaultValue:null,description:"",name:"createCard",required:!1,type:{name:"((column: TColumn) => Promise<TCard>) | undefined"}},onChange:{defaultValue:null,description:"Update the current columns with the given new columns\n\nThis callback will be invoked when the column order and/or content needs to be changed, and will always\nbe invoked before the more the specific callback. For instance, when both `onChange` and `onColumnMoved` are\nprovided the `onChange` callback will be invoked before the `onColumnMoved` callback.",name:"onChange",required:!1,type:{name:"((newColumns: TColumn[]) => void)"}},onColumnAdded:{defaultValue:null,description:"A column was added",name:"onColumnAdded",required:!1,type:{name:"((column: TColumn, index: number) => void)"}},onColumnMoved:{defaultValue:null,description:"A column was moved",name:"onColumnMoved",required:!1,type:{name:"((column: TColumn, newIndex: number, oldIndex: number) => void)"}},onCardAdded:{defaultValue:null,description:"A card was added",name:"onCardAdded",required:!1,type:{name:"((card: TCard, column: TColumn, index: number) => void)"}},onCardMoved:{defaultValue:null,description:"A column was moved",name:"onCardMoved",required:!1,type:{name:"((card: TCard, newColumn: TColumn, newIndex: number, oldColumn: TColumn, oldIndex: number) => void)"}},classes:{defaultValue:null,description:"",name:"classes",required:!1,type:{name:"Record<never, string>"}},getColumnClassName:{defaultValue:null,description:"Allows clients to style columns\n@param colum To be styled column\n@returns Name of the CSS class that should be attached to the column. Return\n`undefined` to keep standard styling",name:"getColumnClassName",required:!1,type:{name:"((colum: TColumn) => string) | undefined"}},renderColumnActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderColumnActions",required:!1,type:{name:"((colum: TColumn) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#Board"]={docgenInfo:Board.__docgenInfo,name:"Board",path:"src/index.tsx#Board"})}catch(__react_docgen_typescript_loader_error){}},563:function(module,exports){},565:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Board}));var regenerator=__webpack_require__(69),regenerator_default=__webpack_require__.n(regenerator),asyncToGenerator=__webpack_require__(112),toConsumableArray=__webpack_require__(86),objectSpread2=__webpack_require__(8),objectWithoutProperties=__webpack_require__(18),jsx_runtime=__webpack_require__(3),react=__webpack_require__(0),react_default=__webpack_require__.n(react),makeStyles=__webpack_require__(1403),Container=__webpack_require__(1408),List=__webpack_require__(1410),clsx_m=__webpack_require__(28),react_beautiful_dnd_esm=__webpack_require__(125),Paper=__webpack_require__(1384),Button=__webpack_require__(1405),Add=__webpack_require__(242),Add_default=__webpack_require__.n(Add),DEFAULT_INTL={addColumnButtonLabel:"Add column",addCardButtonLabel:"Add card",columnNamePlaceholder:"Untitled"},IntlContext=react_default.a.createContext(DEFAULT_INTL),useStyles=Object(makeStyles.a)((function(){return{buttonLabel:{justifyContent:"left"}}}));function AddCardButton(_ref){var onClick=_ref.onClick,styles=_ref.styles,classes=useStyles();return Object(jsx_runtime.jsx)(IntlContext.Consumer,{children:function children(intl){return Object(jsx_runtime.jsx)(Button.a,{startIcon:Object(jsx_runtime.jsx)(Add_default.a,{}),onClick:onClick,className:null==styles?void 0:styles.addCardButton,classes:{label:classes.buttonLabel},color:"inherit",fullWidth:!0,children:intl.addCardButtonLabel})}})}try{AddCardButton.displayName="AddCardButton",AddCardButton.__docgenInfo={description:"",displayName:"AddCardButton",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"AddCardButtonStyles"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddCardButton.tsx#AddCardButton"]={docgenInfo:AddCardButton.__docgenInfo,name:"AddCardButton",path:"src/components/AddCardButton.tsx#AddCardButton"})}catch(__react_docgen_typescript_loader_error){}try{AddCardButton.displayName="AddCardButton",AddCardButton.__docgenInfo={description:"",displayName:"AddCardButton",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"AddCardButtonStyles"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddCardButton.tsx#AddCardButton"]={docgenInfo:AddCardButton.__docgenInfo,name:"AddCardButton",path:"src/components/AddCardButton.tsx#AddCardButton"})}catch(__react_docgen_typescript_loader_error){}var ColumnHeader_useStyles=Object(makeStyles.a)((function(theme){return{root:{display:"flex",alignItems:"center",minHeight:theme.spacing(4)},name:{flexGrow:1,paddingRight:theme.spacing(1),fontWeight:"bold",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}}})),ColumnHeader=react_default.a.memo((function(props){var classes=ColumnHeader_useStyles();return Object(jsx_runtime.jsx)(IntlContext.Consumer,{children:function children(intl){var _props$styles,_props$styles2;return Object(jsx_runtime.jsxs)("div",{className:Object(clsx_m.a)(classes.root,null===(_props$styles=props.styles)||void 0===_props$styles?void 0:_props$styles.columnHeaderRoot),children:[Object(jsx_runtime.jsx)("div",{className:Object(clsx_m.a)(classes.name,null===(_props$styles2=props.styles)||void 0===_props$styles2?void 0:_props$styles2.columnHeaderName),children:props.name||intl.columnNamePlaceholder}),props.renderActions&&props.renderActions()]})}})}));try{ColumnHeader.displayName="ColumnHeader",ColumnHeader.__docgenInfo={description:"",displayName:"ColumnHeader",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ColumnHeaderStyles"}},renderActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderActions",required:!1,type:{name:"(() => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ColumnHeader.tsx#ColumnHeader"]={docgenInfo:ColumnHeader.__docgenInfo,name:"ColumnHeader",path:"src/components/ColumnHeader.tsx#ColumnHeader"})}catch(__react_docgen_typescript_loader_error){}try{ColumnHeader.displayName="ColumnHeader",ColumnHeader.__docgenInfo={description:"",displayName:"ColumnHeader",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ColumnHeaderStyles"}},renderActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderActions",required:!1,type:{name:"(() => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ColumnHeader.tsx#ColumnHeader"]={docgenInfo:ColumnHeader.__docgenInfo,name:"ColumnHeader",path:"src/components/ColumnHeader.tsx#ColumnHeader"})}catch(__react_docgen_typescript_loader_error){}var Card=__webpack_require__(1406),CardContent=__webpack_require__(1407),KanbanCard_useStyles=Object(makeStyles.a)((function(theme){return{card:{cursor:"pointer!important",position:"relative",marginBottom:theme.spacing(1)}}}));function DefaultCard(_ref){var card=_ref.card,provided=_ref.provided,classes=KanbanCard_useStyles();return Object(jsx_runtime.jsx)(Card.a,Object(objectSpread2.a)(Object(objectSpread2.a)(Object(objectSpread2.a)({},provided.draggableProps),provided.dragHandleProps),{},{innerRef:provided.innerRef,className:classes.card,variant:"outlined",children:Object(jsx_runtime.jsx)(CardContent.a,{children:card.id})}))}function KanbanCard(_ref2){var card=_ref2.card,index=_ref2.index,isDragDisabled=_ref2.isDragDisabled,_ref2$children=_ref2.children,_children=void 0===_ref2$children?function(card,provided){return Object(jsx_runtime.jsx)(DefaultCard,{card:card,provided:provided})}:_ref2$children;return Object(jsx_runtime.jsx)(react_beautiful_dnd_esm.b,{draggableId:card.id,index:index,disableInteractiveElementBlocking:!0,isDragDisabled:isDragDisabled,children:function children(provided,snapshot){return _children(card,provided,snapshot)||Object(jsx_runtime.jsx)("div",{})}})}try{KanbanCard.displayName="KanbanCard",KanbanCard.__docgenInfo={description:"",displayName:"KanbanCard",props:{card:{defaultValue:null,description:"",name:"card",required:!0,type:{name:"TCard"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isDragDisabled:{defaultValue:null,description:"",name:"isDragDisabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/KanbanCard.tsx#KanbanCard"]={docgenInfo:KanbanCard.__docgenInfo,name:"KanbanCard",path:"src/components/KanbanCard.tsx#KanbanCard"})}catch(__react_docgen_typescript_loader_error){}try{KanbanCard.displayName="KanbanCard",KanbanCard.__docgenInfo={description:"",displayName:"KanbanCard",props:{card:{defaultValue:null,description:"",name:"card",required:!0,type:{name:"TCard"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isDragDisabled:{defaultValue:null,description:"",name:"isDragDisabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/KanbanCard.tsx#KanbanCard"]={docgenInfo:KanbanCard.__docgenInfo,name:"KanbanCard",path:"src/components/KanbanCard.tsx#KanbanCard"})}catch(__react_docgen_typescript_loader_error){}var KanbanColumn_useStyles=Object(makeStyles.a)((function(theme){return{paper:{width:"240px",height:"100%",overflow:"hidden",display:"flex",flexDirection:"column",position:"relative"},list:{flexGrow:1,overflowY:"auto",padding:theme.spacing(.5,1/8,1,1/8)}}}));function InnerObjectsList(_ref){var cards=_ref.cards,isDragDisabled=_ref.isDragDisabled,children=_ref.children;return Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{children:cards.map((function(card,index){return Object(jsx_runtime.jsx)(KanbanCard,{card:card,index:index,isDragDisabled:isDragDisabled,children:children},card.id)}))})}function KanbanColumn(_ref2){var _props$styles,column=_ref2.column,handleAddCard=_ref2.onAddCard,renderColumnActions=_ref2.renderColumnActions,getColumnClassName=_ref2.getColumnClassName,isCardDragDisabled=_ref2.isCardDragDisabled,_children=_ref2.children,props=Object(objectWithoutProperties.a)(_ref2,["column","onAddCard","renderColumnActions","getColumnClassName","isCardDragDisabled","children"]),classes=KanbanColumn_useStyles();return Object(jsx_runtime.jsx)(Paper.a,{elevation:0,className:Object(clsx_m.a)(classes.paper,null===(_props$styles=props.styles)||void 0===_props$styles?void 0:_props$styles.column,getColumnClassName?getColumnClassName(column):void 0),children:Object(jsx_runtime.jsx)(react_beautiful_dnd_esm.c,{droppableId:column.id,type:"card",children:function children(provided){return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)(ColumnHeader,Object(objectSpread2.a)(Object(objectSpread2.a)({},props),{},{name:column.name,renderActions:renderColumnActions?function(){return renderColumnActions(column)}:void 0})),Object(jsx_runtime.jsx)(List.a,{className:classes.list,children:Object(jsx_runtime.jsxs)("div",Object(objectSpread2.a)(Object(objectSpread2.a)({},provided.droppableProps),{},{ref:provided.innerRef,children:[Object(jsx_runtime.jsx)(InnerObjectsList,{cards:column.cards,isDragDisabled:isCardDragDisabled,children:_children}),provided.placeholder,handleAddCard&&Object(jsx_runtime.jsx)(AddCardButton,{onClick:handleAddCard,styles:props.styles})]}))})]})}})})}try{KanbanColumn.displayName="KanbanColumn",KanbanColumn.__docgenInfo={description:"",displayName:"KanbanColumn",props:{column:{defaultValue:null,description:"",name:"column",required:!0,type:{name:"TColumn"}},isDragging:{defaultValue:null,description:"",name:"isDragging",required:!0,type:{name:"boolean"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"KanbanColumnStyles"}},onAddCard:{defaultValue:null,description:"",name:"onAddCard",required:!1,type:{name:"(() => void)"}},isCardDragDisabled:{defaultValue:null,description:"",name:"isCardDragDisabled",required:!1,type:{name:"boolean"}},renderColumnActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderColumnActions",required:!1,type:{name:"((colum: TColumn) => ReactNode)"}},getColumnClassName:{defaultValue:null,description:"Allows clients to style columns\n@param colum To be styled column\n@returns Name of the CSS class that should be attached to the column. Return\n`undefined` to keep standard styling",name:"getColumnClassName",required:!1,type:{name:"((colum: TColumn) => string) | undefined"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},renderActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderActions",required:!1,type:{name:"(() => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/KanbanColumn.tsx#KanbanColumn"]={docgenInfo:KanbanColumn.__docgenInfo,name:"KanbanColumn",path:"src/components/KanbanColumn.tsx#KanbanColumn"})}catch(__react_docgen_typescript_loader_error){}try{KanbanColumn.displayName="KanbanColumn",KanbanColumn.__docgenInfo={description:"",displayName:"KanbanColumn",props:{column:{defaultValue:null,description:"",name:"column",required:!0,type:{name:"TColumn"}},isDragging:{defaultValue:null,description:"",name:"isDragging",required:!0,type:{name:"boolean"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"KanbanColumnStyles"}},onAddCard:{defaultValue:null,description:"",name:"onAddCard",required:!1,type:{name:"(() => void)"}},isCardDragDisabled:{defaultValue:null,description:"",name:"isCardDragDisabled",required:!1,type:{name:"boolean"}},renderColumnActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderColumnActions",required:!1,type:{name:"((colum: TColumn) => ReactNode)"}},getColumnClassName:{defaultValue:null,description:"Allows clients to style columns\n@param colum To be styled column\n@returns Name of the CSS class that should be attached to the column. Return\n`undefined` to keep standard styling",name:"getColumnClassName",required:!1,type:{name:"((colum: TColumn) => string) | undefined"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},renderActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderActions",required:!1,type:{name:"(() => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/KanbanColumn.tsx#KanbanColumn"]={docgenInfo:KanbanColumn.__docgenInfo,name:"KanbanColumn",path:"src/components/KanbanColumn.tsx#KanbanColumn"})}catch(__react_docgen_typescript_loader_error){}var AddColumnButton_useStyles=Object(makeStyles.a)((function(theme){return{container:{marginTop:theme.spacing(1)},button:{whiteSpace:"nowrap"}}}));function AddColumnButton(_ref){var onClick=_ref.onClick,styles=_ref.styles,classes=AddColumnButton_useStyles();return Object(jsx_runtime.jsx)("div",{className:classes.container,children:Object(jsx_runtime.jsx)(IntlContext.Consumer,{children:function children(intl){return Object(jsx_runtime.jsx)(Button.a,{startIcon:Object(jsx_runtime.jsx)(Add_default.a,{}),onClick:onClick,color:"inherit",className:Object(clsx_m.a)(classes.button,null==styles?void 0:styles.addColumnButton),children:intl.addColumnButtonLabel})}})})}try{AddColumnButton.displayName="AddColumnButton",AddColumnButton.__docgenInfo={description:"",displayName:"AddColumnButton",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"AddColumnButtonStyles"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddColumnButton.tsx#AddColumnButton"]={docgenInfo:AddColumnButton.__docgenInfo,name:"AddColumnButton",path:"src/components/AddColumnButton.tsx#AddColumnButton"})}catch(__react_docgen_typescript_loader_error){}try{AddColumnButton.displayName="AddColumnButton",AddColumnButton.__docgenInfo={description:"",displayName:"AddColumnButton",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => void)"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"AddColumnButtonStyles"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddColumnButton.tsx#AddColumnButton"]={docgenInfo:AddColumnButton.__docgenInfo,name:"AddColumnButton",path:"src/components/AddColumnButton.tsx#AddColumnButton"})}catch(__react_docgen_typescript_loader_error){}var Board_useStyles=Object(makeStyles.a)((function(theme){return{content:{display:"flex",flexDirection:"row",flexGrow:1,overflowX:"auto",overflowY:"hidden"},deleteButton:{marginRight:theme.spacing(1)},list:{display:"flex",flexDirection:"row"},columnContainer:{marginRight:theme.spacing(2),padding:0},addColumnButton:{paddingRight:theme.spacing(3)}}}));function InnerColumnList(_ref){var columns=_ref.columns,handleAddCard=_ref.onAddCard,_children=_ref.children,props=Object(objectWithoutProperties.a)(_ref,["columns","onAddCard","children"]),classes=Board_useStyles();return Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{children:columns.map((function(column,index){return Object(jsx_runtime.jsx)(react_beautiful_dnd_esm.b,{draggableId:column.id,index:index,isDragDisabled:props.isColumnDragDisabled,children:function children(draggableProvided,snapshot){return Object(jsx_runtime.jsx)(Container.a,Object(objectSpread2.a)(Object(objectSpread2.a)(Object(objectSpread2.a)({},draggableProvided.draggableProps),draggableProvided.dragHandleProps),{},{innerRef:draggableProvided.innerRef,className:classes.columnContainer,children:Object(react.createElement)(KanbanColumn,Object(objectSpread2.a)(Object(objectSpread2.a)({},props),{},{isDragging:snapshot.isDragging,key:column.id,index:index,column:column,onAddCard:handleAddCard?function(){return handleAddCard(column)}:void 0}),_children)}))}},column.id)}))})}function Board(_ref2){var _props$styles,columns=_ref2.columns,handleChange=_ref2.onChange,createColumn=_ref2.createColumn,createCard=_ref2.createCard,handleColumnAdded=_ref2.onColumnAdded,handleColumnMoved=_ref2.onColumnMoved,handleCardAdded=_ref2.onCardAdded,handleCardMoved=_ref2.onCardMoved,_children2=_ref2.children,_ref2$intl=_ref2.intl,intl=void 0===_ref2$intl?DEFAULT_INTL:_ref2$intl,props=Object(objectWithoutProperties.a)(_ref2,["columns","onChange","createColumn","createCard","onColumnAdded","onColumnMoved","onCardAdded","onCardMoved","children","intl"]),classes=Board_useStyles(),handlesColumnAdded=Boolean(handleChange||handleColumnAdded),handlesColumnMoved=Boolean(handleChange||handleColumnMoved),handlesCardAdded=Boolean(handleChange||handleCardAdded),handlesCardMoved=Boolean(handleChange||handleCardMoved);function handleAddColumn(){return _handleAddColumn.apply(this,arguments)}function _handleAddColumn(){return(_handleAddColumn=Object(asyncToGenerator.a)(regenerator_default.a.mark((function _callee(){var newColumn,newColumns;return regenerator_default.a.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(createColumn){_context.next=2;break}return _context.abrupt("return");case 2:return _context.next=4,createColumn();case 4:if(newColumn=_context.sent){_context.next=7;break}return _context.abrupt("return");case 7:if(handlesColumnAdded){_context.next=9;break}return _context.abrupt("return");case 9:newColumns=[].concat(Object(toConsumableArray.a)(columns),[newColumn]),handleChange&&handleChange(newColumns),handleColumnAdded&&handleColumnAdded(newColumn,newColumns.length-1);case 12:case"end":return _context.stop()}}),_callee)})))).apply(this,arguments)}function handleAddCard(_x){return _handleAddCard.apply(this,arguments)}function _handleAddCard(){return(_handleAddCard=Object(asyncToGenerator.a)(regenerator_default.a.mark((function _callee2(column){var newCard,newIndex,newColumns;return regenerator_default.a.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(createCard){_context2.next=2;break}return _context2.abrupt("return");case 2:return _context2.next=4,createCard(column);case 4:if(newCard=_context2.sent){_context2.next=7;break}return _context2.abrupt("return");case 7:if(handlesCardAdded){_context2.next=9;break}return _context2.abrupt("return");case 9:if(newColumns=columns.map((function(existingColumn){if(existingColumn.id===column.id){var newCards=[].concat(Object(toConsumableArray.a)(column.cards),[newCard]);return newIndex=newCards.length-1,Object(objectSpread2.a)(Object(objectSpread2.a)({},existingColumn),{},{cards:newCards})}return existingColumn})),void 0!==newIndex){_context2.next=13;break}return console.log("Cannot find column ".concat(column.id)),_context2.abrupt("return");case 13:handleChange&&handleChange(newColumns),handleCardAdded&&handleCardAdded(newCard,column,newIndex);case 15:case"end":return _context2.stop()}}),_callee2)})))).apply(this,arguments)}return Object(jsx_runtime.jsx)("div",{className:Object(clsx_m.a)(classes.content,null===(_props$styles=props.styles)||void 0===_props$styles?void 0:_props$styles.root),children:Object(jsx_runtime.jsx)(IntlContext.Provider,{value:intl,children:Object(jsx_runtime.jsx)(react_beautiful_dnd_esm.a,{onDragEnd:function handleDragEnd(result){var destination=result.destination,source=result.source,draggableId=result.draggableId,type=result.type;destination&&(destination.droppableId===source.droppableId&&destination.index===source.index||("card"===type?function moveCard(cardId,columnId,index){if(handlesCardMoved){var found=columns.map((function(column){var index=column.cards.findIndex((function(card){return card.id===cardId}));if(-1!==index)return{column:column,index:index}})).reduce((function(result,entry){return null!=result?result:entry}),void 0);if(found){var newColumn,oldColumn=found.column,oldIndex=found.index,card=oldColumn.cards[oldIndex],newColumns=columns.map((function(column){var newCards=column.cards.filter((function(card){return card.id!==cardId}));return column.id!==columnId?Object(objectSpread2.a)(Object(objectSpread2.a)({},column),{},{cards:newCards}):(newCards.splice(index,0,card),newColumn=Object(objectSpread2.a)(Object(objectSpread2.a)({},column),{},{cards:newCards}))}));newColumn?(handleChange&&handleChange(newColumns),handleCardMoved&&handleCardMoved(card,newColumn,newColumn.cards.findIndex((function(card){return card.id===cardId})),oldColumn,oldIndex)):console.error("Cannot find new column ".concat(columnId))}else console.error("Cannot find card ".concat(cardId))}}(draggableId,destination.droppableId,destination.index):function moveColumn(columnId,index){if(handlesColumnMoved){var _columns$reduce=columns.reduce((function(result,column,index){return column.id===columnId?Object(objectSpread2.a)(Object(objectSpread2.a)({},result),{},{column:column,index:index}):Object(objectSpread2.a)(Object(objectSpread2.a)({},result),{},{newColumns:[].concat(Object(toConsumableArray.a)(result.newColumns),[column])})}),{newColumns:[],column:void 0,index:-1}),newColumns=_columns$reduce.newColumns,column=_columns$reduce.column,oldIndex=_columns$reduce.index;column?(newColumns.splice(index,0,column),handleChange&&handleChange(newColumns),handleColumnMoved&&handleColumnMoved(column,newColumns.indexOf(column),oldIndex)):console.error("Cannot find column ".concat(columnId))}}(draggableId,destination.index)))},children:Object(jsx_runtime.jsx)(react_beautiful_dnd_esm.c,{droppableId:"container",type:"column",direction:"horizontal",children:function children(provided){var _props$styles2;return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)(List.a,Object(objectSpread2.a)(Object(objectSpread2.a)({},provided.droppableProps),{},{innerRef:provided.innerRef,component:"nav",className:classes.list,children:Object(jsx_runtime.jsx)(InnerColumnList,Object(objectSpread2.a)(Object(objectSpread2.a)({},props),{},{columns:columns,onAddCard:createCard&&handleAddCard,isColumnDragDisabled:!handlesColumnMoved,isCardDragDisabled:!handlesCardMoved,children:_children2}))})),provided.placeholder,createColumn&&Object(jsx_runtime.jsx)(AddColumnButton,{onClick:handleAddColumn,styles:{addColumnButton:Object(clsx_m.a)(classes.addColumnButton,null===(_props$styles2=props.styles)||void 0===_props$styles2?void 0:_props$styles2.addColumnButton)}})]})}})})})})}try{Board.displayName="Board",Board.__docgenInfo={description:"A basic kanban-style board\n\nThis component renders the provided columns and their cards, and allows the user to manipulate the board.\n\nFrom a developer perspective most props are optional, and if they are not provided may disable the related\nfunctionality: If there is no `createCard` available, then the board will not allow to create cards, for example.\n\nThe component provides essentially two levels of granularity for learning about the changes:\n* The `onChange` callback reports changes for the rendered columns, which is easy to use but may require diff-ing against\n   the original `columns` property to understand the change\n* The `on{Column,Card}{Added,Moved}` callbacks provide information on the level of individual columns and cards\n\nNote that the board doesn't provide means to delete columns or cards; these functionalities can be provided through\nthe `renderColumnActions` callback for columns or the `children` for rendering cards, respectively.",displayName:"Board",props:{columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"TColumn[]"}},intl:{defaultValue:null,description:"",name:"intl",required:!1,type:{name:"Intl"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"Styles"}},createColumn:{defaultValue:null,description:"",name:"createColumn",required:!1,type:{name:"(() => Promise<TColumn>) | undefined"}},createCard:{defaultValue:null,description:"",name:"createCard",required:!1,type:{name:"((column: TColumn) => Promise<TCard>) | undefined"}},onChange:{defaultValue:null,description:"Update the current columns with the given new columns\n\nThis callback will be invoked when the column order and/or content needs to be changed, and will always\nbe invoked before the more the specific callback. For instance, when both `onChange` and `onColumnMoved` are\nprovided the `onChange` callback will be invoked before the `onColumnMoved` callback.",name:"onChange",required:!1,type:{name:"((newColumns: TColumn[]) => void)"}},onColumnAdded:{defaultValue:null,description:"A column was added",name:"onColumnAdded",required:!1,type:{name:"((column: TColumn, index: number) => void)"}},onColumnMoved:{defaultValue:null,description:"A column was moved",name:"onColumnMoved",required:!1,type:{name:"((column: TColumn, newIndex: number, oldIndex: number) => void)"}},onCardAdded:{defaultValue:null,description:"A card was added",name:"onCardAdded",required:!1,type:{name:"((card: TCard, column: TColumn, index: number) => void)"}},onCardMoved:{defaultValue:null,description:"A column was moved",name:"onCardMoved",required:!1,type:{name:"((card: TCard, newColumn: TColumn, newIndex: number, oldColumn: TColumn, oldIndex: number) => void)"}},classes:{defaultValue:null,description:"",name:"classes",required:!1,type:{name:"Record<never, string>"}},getColumnClassName:{defaultValue:null,description:"Allows clients to style columns\n@param colum To be styled column\n@returns Name of the CSS class that should be attached to the column. Return\n`undefined` to keep standard styling",name:"getColumnClassName",required:!1,type:{name:"((colum: TColumn) => string) | undefined"}},renderColumnActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderColumnActions",required:!1,type:{name:"((colum: TColumn) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Board.tsx#Board"]={docgenInfo:Board.__docgenInfo,name:"Board",path:"src/Board.tsx#Board"})}catch(__react_docgen_typescript_loader_error){}try{Board.displayName="Board",Board.__docgenInfo={description:"A basic kanban-style board\n\nThis component renders the provided columns and their cards, and allows the user to manipulate the board.\n\nFrom a developer perspective most props are optional, and if they are not provided may disable the related\nfunctionality: If there is no `createCard` available, then the board will not allow to create cards, for example.\n\nThe component provides essentially two levels of granularity for learning about the changes:\n* The `onChange` callback reports changes for the rendered columns, which is easy to use but may require diff-ing against\n   the original `columns` property to understand the change\n* The `on{Column,Card}{Added,Moved}` callbacks provide information on the level of individual columns and cards\n\nNote that the board doesn't provide means to delete columns or cards; these functionalities can be provided through\nthe `renderColumnActions` callback for columns or the `children` for rendering cards, respectively.",displayName:"Board",props:{columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"TColumn[]"}},intl:{defaultValue:null,description:"",name:"intl",required:!1,type:{name:"Intl"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"Styles"}},createColumn:{defaultValue:null,description:"",name:"createColumn",required:!1,type:{name:"(() => Promise<TColumn>) | undefined"}},createCard:{defaultValue:null,description:"",name:"createCard",required:!1,type:{name:"((column: TColumn) => Promise<TCard>) | undefined"}},onChange:{defaultValue:null,description:"Update the current columns with the given new columns\n\nThis callback will be invoked when the column order and/or content needs to be changed, and will always\nbe invoked before the more the specific callback. For instance, when both `onChange` and `onColumnMoved` are\nprovided the `onChange` callback will be invoked before the `onColumnMoved` callback.",name:"onChange",required:!1,type:{name:"((newColumns: TColumn[]) => void)"}},onColumnAdded:{defaultValue:null,description:"A column was added",name:"onColumnAdded",required:!1,type:{name:"((column: TColumn, index: number) => void)"}},onColumnMoved:{defaultValue:null,description:"A column was moved",name:"onColumnMoved",required:!1,type:{name:"((column: TColumn, newIndex: number, oldIndex: number) => void)"}},onCardAdded:{defaultValue:null,description:"A card was added",name:"onCardAdded",required:!1,type:{name:"((card: TCard, column: TColumn, index: number) => void)"}},onCardMoved:{defaultValue:null,description:"A column was moved",name:"onCardMoved",required:!1,type:{name:"((card: TCard, newColumn: TColumn, newIndex: number, oldColumn: TColumn, oldIndex: number) => void)"}},classes:{defaultValue:null,description:"",name:"classes",required:!1,type:{name:"Record<never, string>"}},getColumnClassName:{defaultValue:null,description:"Allows clients to style columns\n@param colum To be styled column\n@returns Name of the CSS class that should be attached to the column. Return\n`undefined` to keep standard styling",name:"getColumnClassName",required:!1,type:{name:"((colum: TColumn) => string) | undefined"}},renderColumnActions:{defaultValue:null,description:"Render a button or similar control that provides additional per-column actions.",name:"renderColumnActions",required:!1,type:{name:"((colum: TColumn) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Board.tsx#Board"]={docgenInfo:Board.__docgenInfo,name:"Board",path:"src/Board.tsx#Board"})}catch(__react_docgen_typescript_loader_error){}},590:function(module,exports,__webpack_require__){__webpack_require__(591),__webpack_require__(940),__webpack_require__(941),__webpack_require__(1096),__webpack_require__(1313),__webpack_require__(1345),__webpack_require__(1357),__webpack_require__(1359),__webpack_require__(1364),__webpack_require__(1369),__webpack_require__(1371),module.exports=__webpack_require__(1373)},724:function(module,exports){},941:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(454)}},[[590,1,2]]]);
//# sourceMappingURL=main.38bffa6f7fdb3bde7e17.bundle.js.map